###短めのコード集

###for Rigging

#active Armatureに含まれるboneの一覧をコンソールに出力する。
###Output bone's names to Console
obj = bpy.context.active_object
if obj.type == 'ARMATURE':
    for bone in obj.data.bones:
        print(bone.name)



#selected Armatureに含まれるboneの名称をViewPort上で見えるようにする。
###Show bone's name on ViewPort
for amt in bpy.context.selected_objects:
    amt.data.show_names = True
    



#selected Armatureに含まれるbone名の".00"を"_0"に置き換える。※"~.0xx"に注意。
###Remove ".00" and Add "_0"
for amt in bpy.context.selected_objects:
    if amt.type == 'ARMATURE':
        for bn in amt.data.bones:
            bname = bn.name
            if ".00" in bname:
                (forenm,dtzrzr,rearnm) = bname.rpartition(".00")
                bn.name = forenm + "_0" + rearnm




#selected Armatureに含まれるBone名に回転軸を示すsuffixを追加する関数
###Function adds name showing rotation axis
def Add_Rot_Vrt(bn):
    bname = bn.name
    if (bname[-2:] == ".R" or bname[-2:] == ".L"):
        bn.name = bname[:-2] + "_vrt" + bname[-2:]
    else :
        bn.name = bname + "_vrt"

def Add_Rot_Hrz(bn):
    bname = bn.name
    if (bname[-2:] == ".R" or bname[-2:] == ".L"):
        bn.name = bname[:-2] + "_hrz" + bname[-2:]
    else :
        bn.name = bname + "_hrz"

def Add_Rot_Crn(bn):
    bname = bn.name
    if (bname[-2:] == ".R" or bname[-2:] == ".L"):
        bn.name = bname[:-2] + "_crn" + bname[-2:]
    else :
        bn.name = bname + "_crn"
          


#selected Armatureに含まれるBoneの回転軸を名前に従って制限する。（上の続き）
###set rotation axis corresponding to suffix
for amt in bpy.context.selected_objects:
    for bn in amt.pose.bones:
        if "_vrt" in bn.name:
            bn.lock_rotation[0:] = [0,1,1]
            bn.lock_ik_x = False
            bn.lock_ik_y = True
            bn.lock_ik_z = True
        elif "_hrz" in bn.name:
            bn.lock_rotation[0:] = [1,0,1]
            bn.lock_ik_x = True
            bn.lock_ik_y = False
            bn.lock_ik_z = True
        elif "_crn" in bn.name:
            bn.lock_rotation[0:] = [1,1,0]
            bn.lock_ik_x = True
            bn.lock_ik_y = True
            bn.lock_ik_z = False
        else :
            bn.lock_rotation[0:] = [1,1,1]
            bn.lock_ik_x = True
            bn.lock_ik_y = True
            bn.lock_ik_z = True
                  